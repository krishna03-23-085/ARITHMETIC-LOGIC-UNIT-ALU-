// -----------------------------------------------------------------------------
// MODULE: alu_tb
// DESCRIPTION: Testbench for the alu_8bit module.
// -----------------------------------------------------------------------------
`timescale 1ns / 1ps

module alu_tb;

    // Testbench signals (reg for inputs, wire for outputs)
    reg [7:0] A_in, B_in;
    reg [2:0] OpSel_in;
    wire [7:0] Result_out;
    wire Cout_out;
    wire Zero_out;

    // Instantiate the Device Under Test (DUT)
    alu_8bit DUT (
        .A(A_in), 
        .B(B_in), 
        .OpSel(OpSel_in),
        .Result(Result_out), 
        .Cout(Cout_out), 
        .Zero(Zero_out)
    );

    // Initial block for driving test vectors
    initial begin
        // Setup waveform dumping (for viewers like GTKWave)
        $dumpfile("alu_8bit.vcd");
        $dumpvars(0, alu_tb);

        // Header for console monitoring
        $display("Time | OpCode | A   | B   | Result | Cout | Zero");
        $monitor("%0t | %b    | %h  | %h  | %h     | %b   | %b", 
                 $time, OpSel_in, A_in, B_in, Result_out, Cout_out, Zero_out);

        // ----------------- TEST SEQUENCE -----------------

        // 1. Reset/Initial State
        A_in = 8'h00; B_in = 8'h00; OpSel_in = 3'b000;
        #10;
        
        // 2. AND Test (010): A=F0, B=0F -> Result=00 (Zero=1)
        A_in = 8'hF0; B_in = 8'h0F; OpSel_in = 3'b010;
        #10;

        // 3. OR Test (011): A=A5, B=5A -> Result=FF (Zero=0)
        A_in = 8'hA5; B_in = 8'h5A; OpSel_in = 3'b011;
        #10;
        
        // 4. NOT Test (100): A=AA -> Result=55
        A_in = 8'hAA; B_in = 8'h00; OpSel_in = 3'b100; // B is ignored
        #10;
        
        // 5. ADD Test (000): A=0F, B=01 -> Result=10 (Cout=0)
        A_in = 8'h0F; B_in = 8'h01; OpSel_in = 3'b000;
        #10;
        
        // 6. ADD Test (Carry/Zero): A=FF, B=01 -> Result=00 (Cout=1, Zero=1)
        A_in = 8'hFF; B_in = 8'h01; OpSel_in = 3'b000;
        #10;
        
        // 7. SUB Test (001): A=10, B=01 -> Result=0F (Cout=1, meaning no borrow)
        A_in = 8'h10; B_in = 8'h01; OpSel_in = 3'b001;
        #10;
        
        // 8. SUB Test (Borrow/Negative): A=01, B=10 -> Result=F1 (Cout=0, meaning borrow occurred)
        A_in = 8'h01; B_in = 8'h10; OpSel_in = 3'b001;
        #10;
        
        // End simulation
        $finish;
    end
    
endmodule
